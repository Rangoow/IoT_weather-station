{"version":3,"sources":["components/CityDetail.js","components/CityCard.js","components/AddCity.js","actions/citiesActions.js","actions/types.js","components/NavBar.js","components/Main.js","App.js","serviceWorker.js","reducers/cityReducer.js","reducers/index.js","store.js","index.js"],"names":["data","labels","temps","humidities","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","borderWidth","options","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","padding","gridLines","zeroLineColor","drawTicks","drawBorder","xAxes","layout","left","right","top","bottom","Transition","React","forwardRef","props","ref","Slide","direction","CityDetail","state","name","undefined","handleNamechange","e","setState","target","value","handleCancel","handleClose","handleAddCity","preventDefault","newCity","id","uuid","city","temp","humidity","addCity","this","openw","axios","get","then","res","dates","feeds","map","x","created_at","field1","field2","classes","open","cityName","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","maxWidth","fullWidth","DialogTitle","DialogContent","className","modal","graph","Component","withStyles","theme","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","spacing","height","CityCard","detailOpen","handleClick","openWeather","main","Card","root","variant","CardActionArea","onClick","CardContent","Typography","title","color","gutterBottom","component","minWidth","margin","fontSize","AddCity","openweather","TextField","autoFocus","formItems","defaultValue","onChange","DialogActions","Button","connect","dispatch","post","type","payload","NavBar","addOpen","handleAddButton","AppBar","Toolbar","noWrap","style","flex","addButton","startIcon","flexGrow","MainPage","toggleDrawer","getCities","cities","Grid","container","justify","cards","key","_id","paddingTop","createMuiTheme","primary","light","dark","App","Paper","Main","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7e01e539.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Dialog, Slide, DialogTitle, DialogContent } from \"@material-ui/core\";\n\nimport axios from \"axios\";\nimport uuid from \"uuid\";\nimport { Line } from \"react-chartjs-2\";\n\nconst data = (labels, temps, humidities) => {\n\treturn {\n\t\tlabels: labels,\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: \"TempÃ©ratures\",\n\t\t\t\tborderColor: \"#f96332\",\n\t\t\t\tpointBorderColor: \"#FFF\",\n\t\t\t\tpointBackgroundColor: \"#f96332\",\n\t\t\t\tpointBorderWidth: 2,\n\t\t\t\tpointHoverRadius: 4,\n\t\t\t\tpointHoverBorderWidth: 1,\n\t\t\t\tpointRadius: 4,\n\t\t\t\tfill: true,\n\t\t\t\tborderWidth: 2,\n\t\t\t\tdata: temps\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: \"HumiditÃ©\",\n\t\t\t\tborderColor: \"#14ad2b\",\n\t\t\t\tpointBorderColor: \"#FFF\",\n\t\t\t\tpointBackgroundColor: \"#14ad2b\",\n\t\t\t\tpointBorderWidth: 2,\n\t\t\t\tpointHoverRadius: 4,\n\t\t\t\tpointHoverBorderWidth: 1,\n\t\t\t\tpointRadius: 4,\n\t\t\t\tfill: true,\n\t\t\t\tborderWidth: 2,\n\t\t\t\tdata: humidities\n\t\t\t}\n\t\t]\n\t};\n};\nconst options = {\n\tmaintainAspectRatio: false,\n\tlegend: {\n\t\tdisplay: false\n\t},\n\ttooltips: {\n\t\tbodySpacing: 4,\n\t\tmode: \"nearest\",\n\t\tintersect: 0,\n\t\tposition: \"nearest\",\n\t\txPadding: 10,\n\t\tyPadding: 10,\n\t\tcaretPadding: 10\n\t},\n\tresponsive: 1,\n\tscales: {\n\t\tyAxes: [\n\t\t\t{\n\t\t\t\tticks: {\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tpadding: 15\n\t\t\t\t},\n\t\t\t\tgridLines: {\n\t\t\t\t\tzeroLineColor: \"transparent\",\n\t\t\t\t\tdrawTicks: false,\n\t\t\t\t\tdisplay: false,\n\t\t\t\t\tdrawBorder: false\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\txAxes: [\n\t\t\t{\n\t\t\t\tdisplay: 1,\n\t\t\t\tticks: {\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tpadding: 15\n\t\t\t\t},\n\t\t\t\tgridLines: {\n\t\t\t\t\tzeroLineColor: \"transparent\",\n\t\t\t\t\tdrawTicks: false,\n\t\t\t\t\tdisplay: false,\n\t\t\t\t\tdrawBorder: false\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\tlayout: {\n\t\tpadding: { left: 10, right: 10, top: 15, bottom: 15 }\n\t}\n};\n\nconst style = theme => ({\n\tmodal: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\"\n\t},\n\tpaper: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: \"2px solid #000\",\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3)\n\t},\n\tgraph: {\n\t\theight: 400\n\t}\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nclass CityDetail extends Component {\n\tstate = { name: undefined, temps: [] };\n\n\tcomponentDidMount() {\n\t\tconst { openw } = this.props;\n\t\tif (!openw)\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t\"http://api.thingspeak.com/channels/997472/feeds.json?&results=100&api_key=CBO5J9VCE5IQ5EA3\"\n\t\t\t\t)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tdates: res.data.feeds.map(x => x.created_at),\n\t\t\t\t\t\ttemps: res.data.feeds.map(x => x.field1),\n\t\t\t\t\t\thumidities: res.data.feeds.map(x => x.field2)\n\t\t\t\t\t});\n\t\t\t\t});\n\t}\n\n\thandleNamechange = e => {\n\t\tthis.setState({ name: e.target.value });\n\t};\n\n\thandleCancel = () => {\n\t\tthis.setState({ name: undefined });\n\t\tthis.props.handleClose();\n\t};\n\thandleAddCity = e => {\n\t\te.preventDefault();\n\n\t\tconst newCity = {\n\t\t\tid: uuid(),\n\t\t\tcity: this.state.name,\n\t\t\ttemp: 15,\n\t\t\thumidity: 12\n\t\t};\n\t\tthis.props.addCity(newCity);\n\t\tthis.handleCancel();\n\t};\n\trender() {\n\t\tconst { classes, open, handleClose, cityName, openw } = this.props;\n\t\tconst { dates, temps, humidities } = this.state;\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\n\t\t\t\tmaxWidth=\"xl\"\n\t\t\t\tfullWidth={!openw}\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"alert-dialog-slide-title\">{cityName}</DialogTitle>\n\t\t\t\t<DialogContent className={classes.modal}>\n\t\t\t\t\t{!openw ? (\n\t\t\t\t\t\t<Line\n\t\t\t\t\t\t\tdata={data(dates, temps, humidities)}\n\t\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\t\tclassName={classes.graph}\n\t\t\t\t\t\t></Line>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\"Affichage de l'historique impossible car la fonctionnalitÃ© est payante sur l'api openweather\"\n\t\t\t\t\t)}\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n\nexport default withStyles(style)(CityDetail);\n","import React, { Component } from \"react\";\nimport {\n\tCard,\n\tCardContent,\n\tTypography,\n\tCardActionArea\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { withStyles } from \"@material-ui/styles\";\nimport CityDetail from \"./CityDetail\";\n\nconst style = {\n\troot: {\n\t\tminWidth: 250,\n\t\tmaxWidth: 300,\n\t\tmargin: 20,\n\t\tbackgroundColor: \"#2e2e2e\"\n\t},\n\ttitle: {\n\t\tfontSize: 24\n\t}\n};\n\nclass CityCard extends Component {\n\tstate = {\n\t\ttemp: undefined,\n\t\thumidity: undefined,\n\t\tid: undefined,\n\t\tdetailOpen: false\n\t};\n\tcomponentDidMount() {\n\t\tconst { city } = this.props;\n\t\tif (city.openWeather) {\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t\"http://api.openweathermap.org/data/2.5/weather?q=\" +\n\t\t\t\t\t\tcity.cityName +\n\t\t\t\t\t\t\"&units=metric&lang=fr&appid=a28aa797e78814860d441a08242c554b\"\n\t\t\t\t)\n\t\t\t\t.then(res => {\n\t\t\t\t\t//console.log(res);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttemp: res.data.main.temp,\n\t\t\t\t\t\thumidity: res.data.main.humidity,\n\t\t\t\t\t\tid: res.data.id\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t} else {\n\t\t\taxios\n\t\t\t\t.get(\n\t\t\t\t\t\"http://api.thingspeak.com/channels/997472/feeds.json?api_key=CBO5J9VCE5IQ5EA3&results=1\"\n\t\t\t\t)\n\t\t\t\t.then(res => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\ttemp: res.data.feeds[0].field1,\n\t\t\t\t\t\thumidity: res.data.feeds[0].field2\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t}\n\thandleClick = () => {\n\t\tthis.setState({ detailOpen: !this.state.detailOpen });\n\t};\n\n\trender() {\n\t\tconst { classes, city } = this.props;\n\t\tconst { temp, humidity, detailOpen } = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card className={classes.root} variant=\"outlined\">\n\t\t\t\t\t<CardActionArea onClick={this.handleClick}>\n\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\t\t\tcolor=\"textSecondary\"\n\t\t\t\t\t\t\t\tgutterBottom\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{city.cityName}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h5\" component=\"h2\">\n\t\t\t\t\t\t\t\tTempÃ©rature : {temp}Â°C\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t\t\tHumiditÃ©: {humidity}%\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</CardActionArea>\n\t\t\t\t</Card>\n\t\t\t\t<CityDetail\n\t\t\t\t\topen={detailOpen}\n\t\t\t\t\thandleClose={this.handleClick}\n\t\t\t\t\tcityName={city.cityName}\n\t\t\t\t\topenw={city.openWeather}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(style)(CityCard);\n","import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/styles\";\nimport {\n\tDialog,\n\tSlide,\n\tDialogTitle,\n\tDialogContent,\n\tDialogActions,\n\tButton,\n\tTextField\n} from \"@material-ui/core\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addCity } from \"../actions/citiesActions\";\n\nconst style = theme => ({\n\tmodal: {\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\",\n\t\tjustifyContent: \"center\"\n\t},\n\tpaper: {\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: \"2px solid #000\",\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3)\n\t}\n});\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n\treturn <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nclass AddCity extends Component {\n\tstate = { name: undefined };\n\n\thandleNamechange = e => {\n\t\tthis.setState({ name: e.target.value });\n\t};\n\n\thandleCancel = () => {\n\t\tthis.setState({ name: undefined });\n\t\tthis.props.handleClose();\n\t};\n\thandleAddCity = e => {\n\t\te.preventDefault();\n\n\t\tconst newCity = {\n\t\t\tname: this.state.name,\n\t\t\topenweather: true\n\t\t};\n\t\tthis.props.addCity(newCity);\n\t\tthis.handleCancel();\n\t};\n\trender() {\n\t\tconst { classes, open, handleClose } = this.props;\n\t\tconst { name } = this.state;\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={open}\n\t\t\t\tTransitionComponent={Transition}\n\t\t\t\tkeepMounted\n\t\t\t\tonClose={handleClose}\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"alert-dialog-slide-title\">\n\t\t\t\t\t{\"Ajouter une ville\"}\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\tlabel=\"Ville\"\n\t\t\t\t\t\tclassName={classes.formItems}\n\t\t\t\t\t\tdefaultValue={name}\n\t\t\t\t\t\tonChange={this.handleNamechange}\n\t\t\t\t\t/>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.handleCancel} color=\"secondary\">\n\t\t\t\t\t\tAnnuler\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button onClick={this.handleAddCity} color=\"primary\">\n\t\t\t\t\t\tAjouter\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t}\n}\n\nAddCity.propTypes = {\n\taddCity: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({ city: state.city });\n\nexport default connect(mapStateToProps, { addCity })(\n\twithStyles(style)(AddCity)\n);\n","import { GET_CITIES, ADD_CITY } from \"./types\";\nimport axios from \"axios\";\n\nexport const getCities = () => dispatch => {\n\taxios\n\t\t.get(`api/`)\n\t\t.then(res => dispatch({ type: GET_CITIES, payload: res.data }));\n};\n\nexport const addCity = city => dispatch => {\n\taxios\n\t\t.post(`api/`, { cityName: city.name, openWeather: city.openweather })\n\t\t.then(res => {\n\t\t\tdispatch({ type: ADD_CITY, payload: res.data });\n\t\t});\n};\n","export const GET_CITIES = \"GET_CITY\";\nexport const ADD_CITY = \"ADD_CITY\";","import React, { Component } from \"react\";\n\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\n\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AddCity from \"./AddCity\";\n\nconst style = {\n  root: {\n    flexGrow: 1\n  },\n  title: {\n    flexGrow: 1\n  },\n  addButton: {\n    right: 0\n  }\n};\n\nclass NavBar extends Component {\n  state = {\n    addOpen: false\n  };\n\n  handleAddButton = () => {\n    this.setState({ addOpen: !this.state.addOpen });\n  };\n  render() {\n    const { classes } = this.props;\n    const { addOpen } = this.state;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\" noWrap style={{ flex: 1 }}>\n              La MÃ©tÃ©o\n            </Typography>\n            <Button\n              className={classes.addButton}\n              variant=\"contained\"\n              color=\"secondary\"\n              startIcon={<AddIcon />}\n              onClick={this.handleAddButton}\n            >\n              Ajouter\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <AddCity open={addOpen} handleClose={this.handleAddButton} />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(style)(NavBar);\n","import React, { Component } from \"react\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CityCard from \"./CityCard\";\n\nimport { Grid } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\n\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getCities } from \"../actions/citiesActions\";\n\nconst styles = {\n\troot: {\n\t\tdisplay: \"flex\"\n\t},\n\tcards: {\n\t\tpaddingTop: 70\n\t}\n};\n\nclass MainPage extends Component {\n\tstate = { open: false };\n\n\ttoggleDrawer = () => {\n\t\tthis.setState({ open: !this.state.open });\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.props.getCities();\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { cities } = this.props.city;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<NavBar />\n\t\t\t\t<Grid\n\t\t\t\t\tcontainer\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"center\"\n\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\tclassName={classes.cards}\n\t\t\t\t>\n\t\t\t\t\t{cities.map(city => (\n\t\t\t\t\t\t<CityCard city={city} key={city._id}></CityCard>\n\t\t\t\t\t))}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nMainPage.propTypes = {\n\tgetCities: PropTypes.func.isRequired,\n\tcities: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n\tcity: state.city\n});\n\nexport default connect(mapStateToProps, { getCities })(\n\twithStyles(styles)(MainPage)\n);\n","import React, { Component } from \"react\";\nimport MainPage from \"./components/Main\";\nimport \"./App.css\";\n\nimport { createMuiTheme, MuiThemeProvider, Paper } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      light: \"#63ccff\",\n      main: \"#009be5\",\n      dark: \"#006db3\"\n    }\n  }\n});\n\nconst style = {\n  paper: {\n    top: 0,\n    height: \"100vh\"\n  }\n};\nclass App extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Paper className={classes.paper}>\n          <MainPage />\n        </Paper>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(style)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { GET_CITIES, ADD_CITY } from \"../actions/types\";\n\nconst initialState = {\n\tcities: []\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase GET_CITIES:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcities: action.payload\n\t\t\t};\n\t\tcase ADD_CITY:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcities: [action.payload, ...state.cities]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","import { combineReducers } from \"redux\";\nimport cityReducer from \"./cityReducer\";\n\nexport default combineReducers({\n  city: cityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__\n    ? compose(\n        applyMiddleware(...middleware),\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n      )\n    : applyMiddleware(...middleware)\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}